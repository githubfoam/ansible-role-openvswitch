---
sudo: required

env:
  #Linux Docker images for three different CPU architectures: x64, arm and arm64
  # matrix:
  #  - ARCH: arm
  #  - ARCH: arm64
  #  - ARCH: amd64
  -  distribution=ubuntu
      version=1804
      init=/lib/systemd/systemd
      run_opts="--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
  -  distribution=ubuntu
      version=1604
      init=/lib/systemd/systemd
      run_opts="--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"
  -  distribution=centos
      version=7
      init=/usr/lib/systemd/systemd
      run_opts="--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"


services:
  - docker


before_install:
   - 'sudo docker build --rm=true --file=tests/dockerfiles/Dockerfile.${distribution}-${version} --tag=${distribution}-${version}:ansible tests '

script:
  # Create a random file to store the container ID.
  - container_id=$(mktemp)
  - role_name="ansible-role-openvswitch"
  # Run container in detached state
  - 'sudo docker run --detach --volume="${PWD}":/etc/ansible/roles/${role_name}:ro ${run_opts} ${distribution}-${version}:ansible "${init}" > "${container_id}" '
  # Ansible syntax check.
  - 'sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=true ansible-playbook -v /etc/ansible/roles/${role_name}/tests/test.yml --syntax-check'

  # Test role.
  - 'sudo docker exec  "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=true ansible-playbook  /etc/ansible/roles/${role_name}/tests/test.yml'

 # Notify Ansible Galaxy when an ansible role builds successfully.
notifications:
   email: false
   webhooks: https://galaxy.ansible.com/api/v1/notifications/
